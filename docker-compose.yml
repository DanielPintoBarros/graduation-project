version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: always
    ports:
      - '13000:5432'

  nginx:
    depends_on:
      - api-client
      - web-interface
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'

  api-client:
    depends_on:
      - postgres
    build:
      dockerfile: Dockerfile.dev
      context: ./api-client
    volumes:
      - ./api-client:/app
    restart: always
    environment:
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres_password
      PGPORT: 5432
    ports:
      - '5000:5000'

  mudbus-listener:
    depends_on:
      - api-client
      - postgres
    restart: on-failure
    build:
      dockerfile: Dockerfile.dev
      context: ./modbus-listener
    volumes:
      - ./modbus-listener:/app

  monitoring-system:
    depends_on:
      - api-client
      - postgres
    restart: on-failure
    environment:
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres_password
      PGPORT: 5432
    build:
      dockerfile: Dockerfile.dev
      context: ./monitoring-system
    volumes:
      - ./monitoring-system:/app

  web-interface:
    depends_on:
      - api-client
    build:
      dockerfile: Dockerfile.dev
      context: ./web-interface
    volumes:
      - ./web-interface:/app
    restart: always
    environment:
      APICLIENTURL: localhost:5000
    ports:
      - '3000:3000'
